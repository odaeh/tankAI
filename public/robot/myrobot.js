// Generated by LiveScript 1.5.0
(function(){
  var Boss0, tr;
  importScripts('../base-robot.js');
  Boss0 = (function(superclass){
    var i, prototype = extend$((import$(Boss0, superclass).displayName = 'Boss0', Boss0), superclass).prototype, constructor = Boss0;
    i = 0;
    Boss0.prototype.onIdle = function(){
      this.shoot();
      this.move_forwards(50);
      this.turn_left(30);
      this.turn_turret_left(50);
      this.shoot();
    };
    Boss0.prototype.onWallCollide = function(){
      this.yell("Auch!");
      this.move_opposite(50);
      this.turn_left(45);
      this.move_forwards(50);
    };
    Boss0.prototype.onHit = function(){
      this.yell("Oh no!");
      this.turn_left(40);
      this.move_forwards(50);
    };
    Boss0.prototype.onEnemySpot = function(){
      this.yell("Gotcha!");
      this.shoot();
      this.move_backwards(10);
      this.shoot();
      this.turn_turret_right(20);
      this.shoot();
      console.log("FIENDENS VINKEL: " + this.enemySpot[0].angle);
    };
    function Boss0(){
      Boss0.superclass.apply(this, arguments);
    }
    return Boss0;
  }(BaseRobot));
  tr = new Boss0("MyRobot");
  function extend$(sub, sup){
    function fun(){} fun.prototype = (sub.superclass = sup).prototype;
    (sub.prototype = new fun).constructor = sub;
    if (typeof sup.extended == 'function') sup.extended(sub);
    return sub;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
